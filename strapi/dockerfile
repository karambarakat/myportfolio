FROM node:18-alpine
### 1. solving problems encoutered with better-sqlite3
## @see https://github.com/WiseLibs/better-sqlite3/blob/master/docs/troubleshooting.md
## @see https://github.com/nodejs/node-gyp#installation
### 1.1. install python @see https://stackoverflow.com/questions/62554991/how-do-i-install-python-on-alpine-linux
ENV PYTHONUNBUFFERED=1
RUN apk add --update --no-cache python3 && ln -sf python3 /usr/bin/python; \
  python3 -m ensurepip; \
  pip3 install --no-cache --upgrade pip setuptools

### 1.2.install make, GCC, node-gyp
RUN apk add --update make; \
  apk add build-base; \
  npm install -g node-gyp

### 2. install cloudflare cli
WORKDIR /usr/bin
RUN wget -q https://github.com/cloudflare/cloudflared/releases/latest/download/cloudflared-linux-amd64 ; \
  chmod 550 cloudflared-linux-amd64 ; \
  chown 1000:1000 cloudflared-linux-amd64; \
  npm i -g concurrently

### 3.normal node setup
WORKDIR /usr/src/app
COPY ./package*.json .
RUN npm install
COPY . .
ENV NODE_ENV=production
RUN npm run build

RUN  npx json -I -f package.json \
  -e "this.scripts.cloudflare=\"cloudflared-linux-amd64 tunnel run --url localhost:1337 --credentials-contents \$(node docker-script.js) \$tunnel_id\""

# 4. make volume for the database files
VOLUME [ "/usr/src/app/.tmp" ]
RUN mkdir .tmp ; \
  chown 1000:1000 -R .tmp

# 5. run process as node user
USER node
ENTRYPOINT [ "concurrently" , "\"npm run start\"", "\"npm run cloudflare\"" ]
